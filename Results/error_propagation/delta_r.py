import numpy as np
import matplotlib.pyplot as plt

def ds_dk1(k4, k5, k6, r0, q):
    return r0**2*q/(1+k4*r0**2+k5*r0**4+k6*r0**6)


def ds_dk2(k4, k5, k6, r0, q):
    return r0**4*q/(1+k4*r0**2+k5*r0**4+k6*r0**6)


def ds_dk3(k4, k5, k6, r0, q):
    return -r0**6*q/(1+k4*r0**2+k5*r0**4+k6*r0**6)


def ds_dk4(k1, k2, k3, k4, k5, k6, r0, q):
    return -r0**2*q*(1+k1*r0**2+k2*r0**4+k3*r0**6)/(1+k4*r0**2+k5*r0**4+k6*r0**6)**2


def ds_dk5(k1, k2, k3, k4, k5, k6, r0, q):
    return -r0**4*q*(1+k1*r0**2+k2*r0**4+k3*r0**6)/(1+k4*r0**2+k5*r0**4+k6*r0**6)**2


def ds_dk6(k1, k2, k3, k4, k5, k6, r0, q):
    return -r0**6*q*(1+k1*r0**2+k2*r0**4+k3*r0**6)/(1+k4*r0**2+k5*r0**4+k6*r0**6)**2


def dr_dx(x, y, fx, fy):
    return fx**2*x/(np.sqrt((fx*x)**2+(fy*y)**2))


def dr_dy(x, y, fx, fy):
    return fy**2*y/(np.sqrt((fx*x)**2+(fy*y)**2))


def delta_x(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds1, ds2, r0, x, y):
    su = (ds_dk1(k4, k5, k6, r0, x)*dk1)**2\
         + (ds_dk2(k4, k5, k6, r0, x)*dk2)**2\
         + (ds_dk3(k4, k5, k6, r0, x)*dk3)**2\
         + (ds_dk4(k1, k2, k3, k4, k5, k6, r0, x)*dk4)**2\
         + (ds_dk5(k1, k2, k3, k4, k5, k6, r0, x)*dk5)**2\
         + (ds_dk6(k1, k2, k3, k4, k5, k6, r0, x)*dk6)**2\
         + (2*x*y*dp1)**2\
         + ((r0**2 + 2*x**2)*dp2)**2\
         + (r0**2*ds1)**2\
         + (r0**4*ds2)
         
    return np.sqrt(su)


def delta_y(k1, k2, k3, k4, k5, k6, p1, p2, s3, s4, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds3, ds4, r0, x, y):
    su = (ds_dk1(k4, k5, k6, r0, y)*dk1)**2\
         + (ds_dk2(k4, k5, k6, r0, y)*dk2)**2\
         + (ds_dk3(k4, k5, k6, r0, y)*dk3)**2\
         + (ds_dk4(k1, k2, k3, k4, k5, k6, r0, y)*dk4)**2\
         + (ds_dk5(k1, k2, k3, k4, k5, k6, r0, y)*dk5)**2\
         + (ds_dk6(k1, k2, k3, k4, k5, k6, r0, y)*dk6)**2\
         + ((r0**2 + 2*y**2)*dp1)**2\
         + (2*x*y*dp2)**2\
         + (r0**2*ds3)**2\
         + (r0**4*ds4)
         
    return np.sqrt(su)


def x_dist(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, r0, x, y):
    ret = x*(1+k1*r0**2+k2*r0**4+k3*r0**6)/(1+k4*r0**2+k5*r0**4+k6*r0**6)\
          + 2*p1*x*y + p2*(r0**2+2*x**2)\
          + s1*r0**2 + s2*r0**4
   
    return ret


def y_dist(k1, k2, k3, k4, k5, k6, p1, p2, s3, s4, r0, x, y):
    ret = y*(1+k1*r0**2+k2*r0**4+k3*r0**6)/(1+k4*r0**2+k5*r0**4+k6*r0**6)\
          + 2*p2*x*y + p1*(r0**2+2*y**2)\
          + s3*r0**2 + s4*r0**4
                 
    return ret


def delta_r(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, s3, s4, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds1, ds2, ds3, ds4, x, y, fx, fy):
    r0 = np.sqrt(x**2+y**2)
    x_d = x_dist(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, r0, x, y)
    y_d = y_dist(k1, k2, k3, k4, k5, k6, p1, p2, s3, s4, r0, x, y)
   
    su = (dr_dx(x_d, y_d, fx, fy)*delta_x(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds1, ds2, r0, x, y))**2\
         + (dr_dy(x_d, y_d, fx, fy)*delta_y(k1, k2, k3, k4, k5, k6, p1, p2, s3, s4, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds3, ds4, r0, x, y))**2
    
    return np.sqrt(su)

if __name__ == '__main__':
    # old calibration (all coeffs)
    # fx = 2637.985699648917
    # fy = 2625.49297450469

    # k1 = 3.040385605139034
    # dk1 = 5.1462208017581865
    # k2 = 44.30794556950035
    # dk2 = 7.498362391451974
    # k3 = -16.99730324687166
    # dk3 = 77.61078622587156
    # k4 = 2.9926553898411568
    # dk4 = 5.1607915758662255
    # k5 = 42.49884103390419
    # dk5 = 7.960473469068812
    # k6 = -14.162212054178292
    # dk6 = 77.77926479372928

    # p1 = 0.0017411637911572855
    # dp1 = 0.0006453874137069301
    # p2 = 0.0036665740452514785
    # dp2 = 0.000638190921631652

    # s1 = -0.003193024693088454
    # ds1 = 0.0004624487987501941
    # s2 = -0.003204973489792356
    # ds2 = 0.0013482766757503411
    # s3 = -0.002245391854678341
    # ds3 = 0.0005166761897842433
    # s4 = 0.0014034644219210178
    # ds4 = 0.0010331189754853676

   
    # lowdist calibration
    # fx = 2439.7805645195253
    # fy = 2437.2500845680897

    # k1 = -3.580662479808694
    # dk1 = 0.2801926052298926
    # k2 = 6.023683022634858
    # dk2 = 1.2978882382688122
    # k3 = -5.0548735281640695
    # dk3 = 1.4944850101907243
    # k4 = -3.5999843427868314
    # dk4 = 0.2786715183695528
    # k5 = 6.083431708032503
    # dk5 = 1.291467364984928
    # k6 = -5.099767762603165
    # dk6 = 1.4874783006680012

    # p1 = -0.000650032345430838
    # dp1 = 0.0012898132925330402
    # p2 = 0.0007139006072667899
    # dp2 = 0.0008334972109510273

    # s1 = -0.00099969906145761
    # ds1 = 0.0007167167715179
    # s2 = 0.0012190248476607072
    # ds2 = 0.0005581921050377076
    # s3 = 0.0014785581960206223
    # ds3 = 0.0011985424015506741
    # s4 = -0.0012368497624026457
    # ds4 = 0.0004735286736368986

    # normal calibration
    fx = 2621.131086692471
    fy = 2621.5699384033665

    k1 = 18.217416894969755
    dk1 = 1.2230855289323925
    k2 = 15.659079687853549
    dk2 = 5.222533430089955
    k3 = 234.6794993361984
    dk3 = 0.16835040764127618
    k4 = 18.172495953991366
    dk4 = 1.2334475214696379
    k5 = 12.136317196277874
    dk5 = 4.905899749499844
    k6 = 236.90535712711875
    dk6 = 0.49198953673671086

    p1 = -0.0030711147721204685
    dp1 = 0.00038927617012638426
    p2 = 0.0001348947217091179
    dp2 = 0.0002750434328556241

    s1 = 0.0006440181854741561
    ds1 = 0.00023745443176624063
    s2 = -0.0018247297870357824
    ds2 = 0.000577628851469915
    s3 = 0.0046766370659266894
    ds3 = 0.0003790395201874275
    s4 = -0.001271007879686423
    ds4 = 0.0005500888412133509

    res = 1
    x = np.arange(0, 2464/2, res)
    y = np.arange(0, 3280/2, res/2464*3280)
    
    dr = delta_r(k1, k2, k3, k4, k5, k6, p1, p2, s1, s2, s3, s4, dk1, dk2, dk3, dk4, dk5, dk6, dp1, dp2, ds1, ds2, ds3, ds4, x/fx, y/fy, fx, fy)
       
    plt.plot(np.sqrt(x**2+y**2), dr, label='dr')
    plt.legend()
    plt.grid(True)
    